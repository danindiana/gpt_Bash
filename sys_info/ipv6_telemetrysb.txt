Absolutely! Let's create a working version of the script. Here's the enhanced version with some explanations and considerations:

```bash
#!/bin/bash

# Function to log the output of a command to a file
log_command_output() {
  command="$1"
  section_header="$2"
  
  echo "$section_header" >> network_report.txt
  echo "--------------" >> network_report.txt
  $command >> network_report.txt
  echo "" >> network_report.txt # Add a blank line for spacing
}

# Output filename
output_file="network_report.txt"

# Clear any existing output file
> $output_file 

# WHOIS
log_command_output "whois example.com" "WHOIS"

# NSLOOKUP
log_command_output "nslookup example.com" "NSLOOKUP"

# MTR
log_command_output "mtr --report --report-wide --report-cycles 10 example.com" "MTR"

# IPCALC 
log_command_output "ipcalc 192.168.0.0/24" "IPCALC"

# SS
log_command_output "ss -a -A inet6" "SS"

# NETSTAT
log_command_output "netstat -6av" "NETSTAT"

# TELNET NOTE (No change needed here)
echo 'TELNET' >> network_report.txt
echo 'Telnet command is interactive and cannot be logged into a file' >> network_report.txt
```

**Changes and Enhancements:**

* **Shebang:** Added `#!/bin/bash` to specify the interpreter.
* **Output File:**  The script will create a file called `network_report.txt` to store the results.
* **`log_command_output` Function:** Introduced a function to make logging cleaner. It takes the command to run and a section header, simplifying output organization.
* **Placeholders:** I've kept example placeholders (`example.com`, `192.168.0.0/24`). Before running the script, **replace these with the actual targets you want to investigate.**

**How to Use:**

1. **Save the Code:** Save the above code as a `.sh` file (e.g., `network_diagnostics.sh`)
2. **Make Executable:**  Run `chmod +x network_diagnostics.sh` in your terminal to allow execution.
3. **Customize (IMPORTANT):** Edit the script and replace the example domains/IPs with the specific targets you want to diagnose.
4. **Run:** Execute the script by typing `./network_diagnostics.sh`
5. **Results:** The output of all the commands will be saved in the `network_report.txt` file.

**Important Notes:**

* **Permissions:**  Some of the commands in the script (like `ss`) might require root or administrative privileges to run. If necessary, use `sudo` to execute the script.
* **Package Installation:** Ensure tools like `mtr` and `ipcalc` are installed on your Ubuntu system. You might need to use `sudo apt install mtr ipcalc` if they are not present.

**Let me know if you have specific targets in mind â€“ I can help you put the final commands in the placeholders, ensuring they suit your network investigation goals!** 
